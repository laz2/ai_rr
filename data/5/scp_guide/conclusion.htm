<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<title>Инсталляция</title>
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
h1
	{mso-style-link:"Заголовок 1 Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";
	color:black;
	font-weight:normal;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Название Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:16.0pt;
	font-family:"Times New Roman","serif";
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
span.1
	{mso-style-name:"Заголовок 1 Знак";
	mso-style-link:"Заголовок 1";
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.a
	{mso-style-name:"Название Знак";
	mso-style-link:Название;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
.MsoChpDefault
	{font-size:10.0pt;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body bgcolor="#CCFFFF" lang=RU link=blue vlink=purple>

<div class=WordSection1>

<p class=MsoTitle><span style='color:black'>Заключение</span></p>

<p class=MsoTitle><span style='color:black'>&nbsp;</span></p>

<p class=MsoTitle><span style='font-size:14.0pt;color:black'>Сравнение
С-программы и </span></p>

<p class=MsoTitle><span style='font-size:14.0pt;color:black'>аналогичной
scp-программы</span></p>

<p class=MsoNormal><b><span style='font-size:16.0pt;color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify;text-indent:36.0pt'><span
style='font-size:14.0pt;color:black'>Рассмотрим реализацию несложной операции
на двух языках – SCP и </span><span lang=EN-US style='font-size:14.0pt;
color:black'>ANSI </span><span style='font-size:14.0pt;color:black'>С. Это
поможет понять практическую ценность и сферу применения языка SCP.</span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify;text-indent:36.0pt'><span
style='font-size:14.0pt;color:black'>В качестве эталонной операции выберем
задачу нахождения пересечения двух произвольных множеств с учётом кратных
вхождений элементов (пусть множества состоят из чисел, для определённости).
Причём изменять исходные множества нельзя – необходимо результат занести в
новое множество. </span></p>

<p class=MsoNormal style='text-align:justify;text-indent:36.0pt'><span
style='font-size:14.0pt;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify;text-indent:36.0pt'><span
style='font-size:14.0pt;color:black'>Разберём исходный код на языке </span><span
lang=EN-US style='font-size:14.0pt;color:black'>ANSI </span><span
style='font-size:14.0pt;color:black'>С. Функция пересечения </span><i><span
lang=EN-US style='font-size:14.0pt;color:black'>intersection</span></i><i><span
style='font-size:14.0pt;color:black'>()</span></i><span style='font-size:14.0pt;
color:black'> получает пересекаемые множества, как аргументы </span><i><span
lang=EN-US style='font-size:14.0pt;color:black'>Set</span></i><i><span
style='font-size:14.0pt;color:black'>1</span></i><span style='font-size:14.0pt;
color:black'> и </span><i><span lang=EN-US style='font-size:14.0pt;color:black'>Set</span></i><i><span
style='font-size:14.0pt;color:black'>2</span></i><span style='font-size:14.0pt;
color:black'>, и возвращает размер результирующего множества </span><i><span
lang=EN-US style='font-size:14.0pt;color:black'>result</span></i><span
style='font-size:14.0pt;color:black'>: </span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>#include
&lt;stdio.h&gt; </span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>#include
&lt;conio.h&gt;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>#include
&lt;stdlib.h&gt; </span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>int
intersection(int* Set1, int Size1, int* Set2, int Size2, int* result) {</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     int Size =
0;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     for
(register i=0; i&lt;Size1; i++) </span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>          for
(register j=0; j&lt;Size2; j++)</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>              if
(Set1[i] == Set2[j]) {</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>                   realloc(result,
++Size * sizeof(int));</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>                   result[Size-1]
= Set1[i];</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>              }</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     return Size;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>}</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>void main(void)
{</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     int Set1[5]
= {1, 2, 3, 3, 4};</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     int Set2[4]
= {3, 4, 5, 6};</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     int* result
= (int*)malloc(sizeof(int));</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     </span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     int Size =
intersection(Set1, sizeof Set1 / sizeof Set1[0], Set2, sizeof Set2 / sizeof
Set2[0], result);</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     for
(register j=0; j&lt;Size; j++)</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>          printf(&quot;%d  
&quot;, result[j]);</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     getch();</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>     free(result);</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>}</span></p>

<p class=MsoNormal style='text-align:justify'><i><span lang=EN-US
style='font-size:14.0pt;color:black'>&nbsp;</span></i></p>

<p class=MsoNormal style='text-align:justify;text-indent:36.0pt'><span
style='font-size:14.0pt;color:black'>Главная функция </span><i><span
lang=EN-US style='font-size:14.0pt;color:black'>main</span></i><i><span
style='font-size:14.0pt;color:black'>()</span></i><span style='font-size:14.0pt;
color:black'> производит инициализацию исходных массивов, выделение памяти для
результата, вызов процедуры пересечения и вывод результата для пользователя.</span></p>

<p class=MsoNormal style='text-align:justify;text-indent:36.0pt'><span
style='font-size:14.0pt;color:black'>Расс</span><span style='font-size:14.0pt'>мотрим<span
style='color:black'> исходный код на языке </span></span><span lang=EN-US
style='font-size:14.0pt;color:black'>SCP</span><span style='font-size:14.0pt;
color:black'>. Функция пересечения </span><i><span lang=EN-US style='font-size:
14.0pt;color:black'>intersection</span></i><i><span style='font-size:14.0pt;
color:black'>()</span></i><span style='font-size:14.0pt;color:black'> получает
пересекаемые множества, как аргументы </span><i><span lang=EN-US
style='font-size:14.0pt;color:black'>Set</span></i><i><span style='font-size:
14.0pt;color:black'>1</span></i><span style='font-size:14.0pt;color:black'> и </span><i><span
lang=EN-US style='font-size:14.0pt;color:black'>Set</span></i><i><span
style='font-size:14.0pt;color:black'>2</span></i><span style='font-size:14.0pt;
color:black'>, и возвращает размер результирующего множества </span><i><span
lang=EN-US style='font-size:14.0pt;color:black'>result</span></i><span
style='font-size:14.0pt;color:black'>: </span></p>

<p class=MsoNormal style='text-align:justify;text-indent:36.0pt'><span
style='font-size:12.0pt;color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>#include
&quot;scp_keynodes.scsy&quot;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>procedure(intersection,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>    [[    ]],</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>    [{ Set1,
Set2, result, node, arc }],</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>    {[</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>        1_: 
in_: Set1,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>        2_: 
in_: Set2,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>        3_:
out_: result</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>    ]}</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>)</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>searchSetStr3([1_: 
fixed_: Set1,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>              
2_: assign_: arc,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>              
3_: assign_: node,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>              
set3_: assign_: result])</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>selectYStr3([1_: 
fixed_: Set2,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>             2_:
assign_: pos_: arc,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>             3_:
assign_: node,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>            
set3_: fixed_: result])</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>return()</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>end</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>procedure(main,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>    [[</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>       
intersection = &quot;/example/intersection/intersection&quot;;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>        Set1
-&gt; 1, 2, 3, 3, 4;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>        Set2
-&gt; 3, 4, 5, 6;</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>    ]],</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>    [{ result,
copy, node, arc }]</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>)</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>callReturn([1_:
fixed_: intersection,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>            2_:
fixed_: {[1_: Set1,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>                          2_:
Set2,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>                          3_:
result]}], node)</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>searchSetStr3([1_: 
fixed_: result,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>              
2_: assign_: arc,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>              
3_: assign_: node,</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>              
set3_: assign_: copy])</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>printEl</span><span
style='font-size:12.0pt;font-family:"Courier New";color:black'>([1_: </span><span
lang=EN-US style='font-size:12.0pt;font-family:"Courier New";color:black'>result</span><span
style='font-size:12.0pt;font-family:"Courier New";color:black'>])</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>return</span><span
style='font-size:12.0pt;font-family:"Courier New";color:black'>()</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US
style='font-size:12.0pt;font-family:"Courier New";color:black'>end</span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify;text-indent:36.0pt'><span
style='font-size:14.0pt;color:black'>Сравнив два приведённых выше исходных кода
можно сделать следующие выводы о преимуществах (+) и недостатках (–)
рассмотренных языков программирования:</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;border-collapse:collapse;border:none'>
 <tr>
  <td width="50%" valign=top style='width:50.64%;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  lang=EN-US style='font-size:14.0pt;color:black'>SCP</span></b></p>
  </td>
  <td width="49%" valign=top style='width:49.36%;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  lang=EN-US style='font-size:14.0pt;color:black'>ANSI </span></b><b><span
  style='font-size:14.0pt;color:black'>  </span></b><b><span lang=EN-US
  style='font-size:14.0pt;color:black'>C</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="50%" valign=top style='width:50.64%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(+) Язык ориентирован на работу с графовыми конструкциями – этим
  обусловлено удобство работы с множествами: язык производит промежуточные
  операции самостоятельно. </span></p>
  </td>
  <td width="49%" valign=top style='width:49.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(–) Множества заданы как массивы, то есть как последовательность
  элементов – поэтому обработку множеств необходимо организовывать самому
  программисту вплоть до простейших промежуточных операций.</span></p>
  </td>
 </tr>
 <tr>
  <td width="50%" valign=top style='width:50.64%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(+) Для работы с множествами используются дуги – связи между
  ячейками памяти, которые отражают зависимости одних элементов относительно
  других, причём свой смысл дуги не теряют при изменении множества, так как
  изменения затрагивают только преобразуемые элементы.</span></p>
  </td>
  <td width="49%" valign=top style='width:49.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(–) Для работы с массивами используются индексы – численные
  переменные, которые теряют свой смысл при изменении массива.</span></p>
  </td>
 </tr>
 <tr>
  <td width="50%" valign=top style='width:50.64%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(+) Выделение памяти на уровне идентификаторов ячеек памяти –
  этот факт позволяет ассоциативно работать с памятью, так как с каждой ячейкой
  связан уникальный идентификатор.</span></p>
  </td>
  <td width="49%" valign=top style='width:49.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(–) Выделение памяти на уровне указателей повышает гибкость
  языка, но усложняет работу со сложно структурированной информацией.</span></p>
  </td>
 </tr>
 <tr>
  <td width="50%" valign=top style='width:50.64%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(+) Работа с элементами происходит на уровне идентификаторов, а
  содержимое элементов может быть любым (текст, число, идентификатор, файл).
  Унификация работы облегчает работу со сложно структурированной информацией.</span></p>
  </td>
  <td width="49%" valign=top style='width:49.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(–) Язык сильно типизирован – постоянно необходимо следить за
  соответствием типов.</span></p>
  </td>
 </tr>
 <tr>
  <td width="50%" valign=top style='width:50.64%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(–) Не совсем удобная инициализация данных.</span></p>
  </td>
  <td width="49%" valign=top style='width:49.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><span style='font-size:14.0pt;
  color:black'>(+) Удобная инициализация данными массивов.</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US>&nbsp;</span></p>

</div>

</body>

</html>
